# Generated by Django 5.2.4 on 2025-07-05 09:38

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ARSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('interaction_data', models.JSONField(default=dict, help_text='User interactions during session')),
                ('fit_rating', models.IntegerField(blank=True, help_text="User's fit rating 1-5", null=True)),
                ('feedback', models.TextField(blank=True)),
                ('screenshot', models.ImageField(blank=True, null=True, upload_to='ar_screenshots/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ar_sessions', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ar_tryon.product')),
            ],
        ),
        migrations.CreateModel(
            name='BodyMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.FloatField(blank=True, null=True)),
                ('chest', models.FloatField(blank=True, null=True)),
                ('waist', models.FloatField(blank=True, null=True)),
                ('hips', models.FloatField(blank=True, null=True)),
                ('shoulder_width', models.FloatField(blank=True, null=True)),
                ('arm_length', models.FloatField(blank=True, null=True)),
                ('inseam', models.FloatField(blank=True, null=True)),
                ('shirt_size', models.CharField(blank=True, max_length=10)),
                ('pants_size', models.CharField(blank=True, max_length=10)),
                ('shoe_size', models.CharField(blank=True, max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='body_measurements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ARTryOnResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fit_score', models.FloatField(help_text='Calculated fit score 0-100')),
                ('size_recommendation', models.CharField(max_length=20)),
                ('fit_issues', models.JSONField(default=list, help_text='List of potential fit problems')),
                ('color_match_score', models.FloatField(blank=True, null=True)),
                ('style_compatibility', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='ar_tryon.arsession')),
                ('recommended_products', models.ManyToManyField(blank=True, related_name='recommended_by', to='ar_tryon.product')),
            ],
        ),
        migrations.CreateModel(
            name='ARModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('shirt', 'Shirt'), ('pants', 'Pants'), ('dress', 'Dress'), ('jacket', 'Jacket'), ('shoes', 'Shoes'), ('accessory', 'Accessory')], max_length=20)),
                ('model_file', models.FileField(upload_to='ar_models/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['glb', 'gltf', 'fbx'])])),
                ('texture_file', models.FileField(blank=True, null=True, upload_to='ar_textures/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('sizing_data', models.JSONField(default=dict, help_text='Size mapping and scaling factors')),
                ('anchor_points', models.JSONField(default=dict, help_text='Body anchor points for positioning')),
                ('scale_factor', models.FloatField(default=1.0)),
                ('rotation_offset', models.JSONField(default=dict, help_text='Default rotation adjustments')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ar_model', to='ar_tryon.product')),
            ],
        ),
    ]
